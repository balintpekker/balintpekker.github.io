{"version":3,"file":"component---src-templates-tags-js-72b301e4e468fdb02198.js","mappings":"+NAkEA,UAzDa,IAAsC,IAAD,MAApC,YAAEA,EAAW,KAAEC,EAAI,SAAEC,GAAU,EACzC,MAAMC,GAAkC,QAAtB,EAAAF,EAAKG,KAAKC,oBAAY,aAAtB,EAAwBC,QAAK,SACzC,IAAEC,GAAQP,GACV,MAAEQ,EAAK,WAAEC,GAAeR,EAAKS,kBAC7BC,EAAU,SAAWJ,EAE3B,OACI,gBAAC,IAAM,CAACL,SAAUA,EAAUI,MAAOH,GAC/B,gBAAC,IAAG,MACJ,uBAAKS,UAAU,QACX,0BAAI,gBAAC,EAAAC,KAAI,CAACC,GAAIH,GAAS,KAAGJ,IAC1B,sBAAIK,UAAU,oBACTJ,EAAMO,KAAI,CAAC,EAAUC,KAAW,IAArB,KAAEC,GAAM,EAChB,MAAM,KAAEC,GAASD,EAAKE,QAChB,YAAEC,GAAgBH,EAAKE,QACvB,MAAEb,GAAUW,EAAKI,aACjB,KAAEC,GAASL,EAAKI,YACtB,OACI,sBAAIE,IAAKL,GACL,0BAAI,gBAAC,EAAAL,KAAI,CAACC,GAAII,GAAOZ,IACrB,6BAAQgB,EAAK,MAAIF,EAAYI,MAC3BR,EAAQ,EAAIP,GACV,2BAEH,KAIjB,wBAAMG,UAAU,QAAO,gBAAC,EAAAC,KAAI,CAACC,GAAG,SAAQ,cAEvC,EA6BV,MAAMW,EAAO,IAAM,gBAAC,IAAG,K","sources":["webpack://gatsby-starter-blog/./src/templates/tags.js"],"sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\n\n// Components\nimport { Link, graphql } from \"gatsby\"\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst Tags = ({ pageContext, data, location }) => {\n    const siteTitle = data.site.siteMetadata?.title || `Title`\n    const { tag } = pageContext\n    const { edges, totalCount } = data.allMarkdownRemark\n    const tagLink = \"/tags/\" + tag\n\n    return (\n        <Layout location={location} title={siteTitle}>\n            <Bio />\n            <div className=\"tags\">\n                <h1><Link to={tagLink}># {tag}</Link></h1>\n                <ul className=\"tags-list-single\">\n                    {edges.map(({ node }, index) => {\n                        const { slug } = node.fields\n                        const { readingTime } = node.fields\n                        const { title } = node.frontmatter\n                        const { date } = node.frontmatter\n                        return (\n                            <li key={slug}>\n                                <h2><Link to={slug}>{title}</Link></h2>\n                                <small>{date} - {readingTime.text}</small>\n                                { index + 1 < totalCount &&\n                                    <hr />\n                                }\n                            </li>\n                        )\n                    })}\n                </ul>\n                <span className=\"tags\"><Link to=\"/tags\">All tags</Link></span>\n            </div>\n        </Layout>\n    )\n}\n\nTags.propTypes = {\n    pageContext: PropTypes.shape({\n        tag: PropTypes.string.isRequired,\n    }),\n    data: PropTypes.shape({\n        allMarkdownRemark: PropTypes.shape({\n            totalCount: PropTypes.number.isRequired,\n            edges: PropTypes.arrayOf(\n                PropTypes.shape({\n                    node: PropTypes.shape({\n                        frontmatter: PropTypes.shape({\n                            title: PropTypes.string.isRequired,\n                        }),\n                        fields: PropTypes.shape({\n                            slug: PropTypes.string.isRequired,\n                        }),\n                    }),\n                }).isRequired\n            ),\n        }),\n    }),\n}\n\nexport default Tags\n\nexport const Head = () => <Seo />\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { frontmatter: { date: DESC }}\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n            readingTime {\n              text\n            }\n          }\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["pageContext","data","location","siteTitle","site","siteMetadata","title","tag","edges","totalCount","allMarkdownRemark","tagLink","className","Link","to","map","index","node","slug","fields","readingTime","frontmatter","date","key","text","Head"],"sourceRoot":""}