{"version":3,"file":"component---src-pages-404-js-0344260eb3574819cc4b.js","mappings":"uJAiDA,IA9Ce,IAAoC,IAAD,MAAlC,SAAEA,EAAQ,MAAEC,EAAK,SAAEC,GAAU,EAC3C,MACMC,EAD6B,MAChBH,EAASI,SACtBC,GAAOC,EAAAA,EAAAA,gBAAe,cAc5B,IAAIC,EAGFA,EADEJ,EAEA,sBAAIK,UAAU,gBACZ,gBAAC,EAAAC,KAAI,CAACC,GAAG,KAAKT,IAKhB,gBAAC,EAAAQ,KAAI,CAACD,UAAU,mBAAmBE,GAAG,KACnCT,GAKP,MAAMU,EAA+B,QAAzB,EAAGN,EAAKO,KAAKC,oBAAY,aAAtB,EAAwBF,OAEvC,OACE,uBAAKH,UAAU,iBAAiB,oBAAmBL,GACjD,0BAAQK,UAAU,iBAAiBD,GACnC,4BAAOL,GACP,8BAAQ,MACH,IAAIY,MAAOC,cAAc,MAAG,qBAAGC,KAAI,yBAAyBL,aAAM,EAANA,EAAQM,UAAO,KAAU,WAAW,MAAG,qBAAGD,KAAI,6BAA6BL,aAAM,EAANA,EAAQO,WAAQ,KAAU,YAAY,MAAG,qBAAGF,KAAI,wBAAwBL,aAAM,EAANA,EAAQQ,SAAM,KAAU,WAExO,C,+CCIV,IAvCY,IAAuC,IAAD,UAArC,YAAEC,EAAW,MAAEnB,EAAK,SAAEC,GAAU,EAC3C,MAAM,KAAEU,IAASN,EAAAA,EAAAA,gBAAe,cAgB1Be,EAAkBD,GAAeR,EAAKC,aAAaO,YACnDE,EAAgC,QAApB,EAAGV,EAAKC,oBAAY,aAAjB,EAAmBZ,MAExC,OACE,gCACE,6BAAQqB,EAAkBrB,EAAK,MAAMqB,EAAiBrB,GACtD,wBAAMsB,KAAK,cAAcC,QAASH,IAClC,wBAAMI,SAAS,WAAWD,QAASvB,IACnC,wBAAMwB,SAAS,iBAAiBD,QAASH,IACzC,wBAAMI,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBACED,KAAK,kBACLC,SAA0B,QAAjB,EAAAZ,EAAKC,oBAAY,OAAQ,QAAR,EAAjB,EAAmBF,cAAM,WAAR,EAAjB,EAA2BM,UAAO,KAE7C,wBAAMM,KAAK,gBAAgBC,QAASvB,IACpC,wBAAMsB,KAAK,sBAAsBC,QAASH,IACzCnB,EACA,C,kGCvCP,MAWawB,EAAO,IAAM,gBAAC,IAAG,CAACzB,MAAM,mBAErC,UAbqB,IAAyB,IAAxB,KAAEI,EAAI,SAAEL,GAAU,EACtC,MAAM2B,EAAYtB,EAAKO,KAAKC,aAAaZ,MAEzC,OACE,gBAAC,IAAM,CAACD,SAAUA,EAAUC,MAAO0B,GACjC,0BAAI,kBACJ,yBAAG,2DACI,C","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/404.js"],"sourcesContent":["import * as React from \"react\"\nimport { graphql, Link, useStaticQuery } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  const data = useStaticQuery(graphql`\n    query LayoutQuery {\n      site {\n        siteMetadata {\n          social {\n            twitter\n            linkedin\n            github\n          }\n        }\n      }\n    }\n  `)\n\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        Â© {new Date().getFullYear()} | <a href={`https://twitter.com/${social?.twitter || ``}`}>Twitter</a> | <a href={`https://linkedin.com/in/${social?.linkedin || ``}`}>LinkedIn</a> | <a href={`https://github.com/${social?.github || ``}`}>GitHub</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <h1>404: Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"404: Not Found\" />\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"names":["location","title","children","isRootPath","pathname","data","useStaticQuery","header","className","Link","to","social","site","siteMetadata","Date","getFullYear","href","twitter","linkedin","github","description","metaDescription","defaultTitle","name","content","property","Head","siteTitle"],"sourceRoot":""}